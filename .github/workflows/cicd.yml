name: CARROT-CODING-BACKEND CI/CD

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  MONGODB_NAME: ${{ secrets.MONGODB_NAME }}
  MONGODB_USER: ${{ secrets.MONGODB_USER }}
  MONGODB_PASS: ${{ secrets.MONGODB_PASS }}
  CHAT_GPT_API_KEY: ${{ secrets.CHAT_GPT_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Setup Environment Variables File
        run: |
          echo "MONGODB_URI=${{ env.MONGODB_URI }}" >> .env
          echo "MONGODB_NAME=${{ env.MONGODB_NAME }}" >> .env
          echo "MONGODB_USER=${{ env.MONGODB_USER }}" >> .env
          echo "MONGODB_PASS=${{ env.MONGODB_PASS }}" >> .env
          echo "CHAT_GPT_API_KEY=${{ env.CHAT_GPT_API_KEY }}" >> .env

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          docker images

      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Connect to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          script: |
            cd /carrot-coding-backend
            docker compose up --force-recreate -d
